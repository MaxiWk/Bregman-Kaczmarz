clear
clc

addpath(genpath('../'))

fprintf('\n Experiment Sparse solutions of overdetermined quadratic systems\n')

num_examples = 20;  
lambda = 10;
solvers = {NK, rNBK(lambda), NBK_sparse(lambda)};
writeout = true; 

problem_data = struct( 'system_size', struct('d', 500, 'n', 1000), ...                        
                       'distr_params', struct('A_distr', 'randn', 'b_distr', 'randn'), ...   
                       'lambda', lambda, ...
                       'sol_properties', struct('type', 'sparse_randn', 'nnz', 50), ...
                       'init_properties', struct('type', 'dual_randn') );
experiment_fig1 = experiment(@sparse_solutions_of_quadratic_equations, ...
                             problem_data, ...
                             solvers, ...
                             num_examples, ...
                             runtime_stopping(struct('iter_save', 1e3, 'max_time', 120)), ...
                             {'residual', 'dist_to_sol', 'nnz'}, ...
                             1/problem_data.system_size.n * ones(1, problem_data.system_size.n), ...
                              struct( ...
                              'random_seed_for_problem', struct('start',0,'increment',0), ...
                              'random_seed_for_init', struct('start',0,'increment',0), ...
                              'random_seed_for_solvers', struct('start',0,'increment',1)));    
stats = experiment_fig1.run(); 



%% generate plots 

figure 
subplot(1,2,1); 
line_plots = plot_minmax_median_quantiles(stats.residual, experiment_fig1.solvers, ...
                                          stats.timegrid);       
                                                                                            
xlabel('t');
ylabel('$$\|f(x_k)\|_2$$', 'Interpreter', 'Latex', 'FontSize', 15);
legend(line_plots, 'NK', 'rNBK', 'NBK', 'location', 'west')

subplot(1,2,2);
line_plots = plot_minmax_median_quantiles(stats.dist_to_sol, experiment_fig1.solvers, ...
                                          stats.timegrid);
                           
xlabel('t');
ylabel('$$\|x_k-\hat x\|_2$$', 'Interpreter', 'Latex', 'FontSize', 15);
legend(line_plots, 'NK', 'rNBK', 'NBK', 'location', 'west')



% report sparsity
for solver_counter = 1:length(solvers)
    fprintf('\n')
    fprintf('%s, nonzero entries(min, median, max): %d, %d, %d \n', ...
            solvers{solver_counter}.id, ...
            stats.nnz.mins(solver_counter), ...
            stats.nnz.medians(solver_counter), ...
            stats.nnz.maxs(solver_counter))
end



if writeout
    writeout_data_over_array_on_xaxis(... 
          '../../sparse_quadratic/n=1000,d=500/fig1.txt', ...
          {'t','POCSmin','rNBKmin','NBKmin', 'POCSmax','rNBKmax','NBKmax', ...
               'POCSmedian','rNBKmedian','NBKmedian', ...
               'POCSquant25','rNBKquant25','NBKquant25', ...
               'POCSquant75','rNBKquant75','NBKquant75'}, ...
          stats.timegrid, ...
          [stats.residual.mins, ...
          stats.residual.maxs, ...
          stats.residual.medians, ...
          stats.residual.quant25s, ...
          stats.residual.quant75s]);
    writeout_data_over_array_on_xaxis(... 
          '../../sparse_quadratic/n=1000,d=500/fig2.txt', ...
          {'t','POCSmin','rNBKmin','NBKmin', 'POCSmax','rNBKmax','NBKmax', ...
               'POCSmedian','rNBKmedian','NBKmedian', ...
               'POCSquant25','rNBKquant25','NBKquant25', ...
               'POCSquant75','rNBKquant75','NBKquant75'}, ...
          stats.timegrid, ...
          [stats.dist_to_sol.mins, ...
          stats.dist_to_sol.maxs, ...
          stats.dist_to_sol.medians, ...
          stats.dist_to_sol.quant25s, ...
          stats.dist_to_sol.quant75s]);   
    writeout_sparsity(...
                '../../sparse_quadratic/n=1000,d=500/nnz.txt', ...
                {'NK(min/median/max)', 'rNBK(min/median/max)', 'NBK(min/median/max)'}, ...
                stats.nnz.mins, stats.nnz.medians, stats.nnz.maxs);
end



